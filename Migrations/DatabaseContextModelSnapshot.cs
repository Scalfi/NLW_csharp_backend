// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLW.Models.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NLW.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.Id", "'Id', '', '1', '1', '', '', 'Int32', 'False'");

            modelBuilder.Entity("NLW.Models.Database.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnName("image")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("text");

                    b.Property<string>("text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "lampadas.svg",
                            Title = "Lâmpadas"
                        },
                        new
                        {
                            Id = 2,
                            Image = "baterias.svg",
                            Title = "Pilhas e Baterias"
                        },
                        new
                        {
                            Id = 3,
                            Image = "papeis-papelao.svg",
                            Title = "Papéis e Papelão"
                        },
                        new
                        {
                            Id = 4,
                            Image = "eletronicos.svg",
                            Title = "Resíduos Eletrônicos"
                        },
                        new
                        {
                            Id = 5,
                            Image = "organicos.svg",
                            Title = "Resíduos Orgânicos"
                        },
                        new
                        {
                            Id = 6,
                            Image = "oleo.svg",
                            Title = "Óleo de Cozinha"
                        });
                });

            modelBuilder.Entity("NLW.Models.Database.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnName("image")
                        .HasColumnType("text");

                    b.Property<decimal>("Latidude")
                        .HasColumnName("latidude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnName("uf")
                        .HasColumnType("text");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasColumnName("whatsapp")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("points");
                });

            modelBuilder.Entity("NLW.Models.Database.PointItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Item_id")
                        .HasColumnType("integer");

                    b.Property<int>("Point_id")
                        .HasColumnName("point_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Item_id");

                    b.HasIndex("Point_id");

                    b.ToTable("pointitems");
                });

            modelBuilder.Entity("NLW.Models.Database.PointItem", b =>
                {
                    b.HasOne("NLW.Models.Database.Item", "Items")
                        .WithMany("PointItems")
                        .HasForeignKey("Item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLW.Models.Database.Point", "Points")
                        .WithMany("PointItems")
                        .HasForeignKey("Point_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
